{"version":3,"sources":["webpack:///./src/pages/three.js","webpack:///./src/components/ImgTile.js","webpack:///./src/components/InPageNav.js"],"names":["Three","data","useStaticQuery","keywords","title","className","threeImages","nodes","map","image","key","id","fluid","childImageSharp","loading","rel","target","href","style","backgroundColor","calc","x","y","window","innerHeight","innerWidth","trans","s","ImgTile","linkTo","subTitle","tileImg","imgAlt","marginTop","marginBottom","rounded","useSpring","xys","config","mass","tension","friction","props","set","to","div","onMouseMove","clientX","clientY","onMouseLeave","transform","interpolate","top","left","alt","InPageNav","location","pathname","tilesData","petImg","shuushImg","classicaImg","spaceDigestImg","buzzsumoImg","tile","i"],"mappings":"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","file":"component---src-pages-three-js-28eea7ce2de15cc45c6b.js","sourcesContent":["import React from \"react\";\nimport SEO from \"../components/Seo\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport TransitionPageIn from \"../components/TransitionPageIn\";\nimport InPageNav from \"../components/InPageNav\";\n\nfunction Three() {\n    const data = useStaticQuery(graphql`\n        query threeImages {\n            threeImages: allFile(\n                filter: { relativeDirectory: { eq: \"three\" } }\n                sort: { order: ASC, fields: name }\n            ) {\n                nodes {\n                    id\n                    childImageSharp {\n                        fluid(maxWidth: 2880) {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    return (\n        <>\n            <SEO\n                keywords={[\n                    `UI Design`,\n                    `Product Design`,\n                    `Product Designer`,\n                    `Messaging App`,\n                    `App`,\n                    `UI Designer`,\n                    `Web Designer`,\n                    `Product Designer`,\n                    `Front-end Developer`,\n                    `Portfolio`,\n                    `Brighton`,\n                    `Uk`,\n                ]}\n                title=\"Three\"\n            />\n            <TransitionPageIn>\n                <div className=\"w-full max-w-full mx-auto \">\n                    {data.threeImages.nodes.map((image) => (\n                        <Img\n                            key={image.id}\n                            fluid={image.childImageSharp.fluid}\n                            loading=\"eager\"\n                        />\n                    ))}\n                </div>\n            </TransitionPageIn>\n            <TransitionPageIn>\n                <a\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    href=\"https://www.instagram.com/three_design_company/\"\n                >\n                    <div\n                        className=\"w-full pb-20 text-center\"\n                        style={{ backgroundColor: \"#f7f7f7\" }}\n                    >\n                        <h2 className=\"xlg:inline-block sm:text-2xl lg:text-4xl text-primary ease-in-out mb-3 underline w-10/12 md:w-8/12 mx-auto \">\n                            Instagram\n                        </h2>\n                    </div>\n                </a>\n            </TransitionPageIn>\n            <div className=\"bg-blackPure\">\n                <InPageNav />\n            </div>\n        </>\n    );\n}\n\nexport default Three;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { useSpring, animated, config } from \"react-spring\";\nimport Img from \"gatsby-image\";\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 80, (x - window.innerWidth / 2) / 80, 0.96];\nconst trans = (x, y, s) => `perspective(1200px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nfunction ImgTile({ linkTo, href, title, subTitle, tileImg, imgAlt, marginTop, marginBottom, rounded }) {\n   const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 150, friction: 30 } }));\n\n   return (\n      <>\n         {linkTo ? (\n            <Link to={linkTo}>\n               <animated.div\n                  onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n                  onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                  style={{ transform: props.xys.interpolate(trans) }}\n                  className={`group w-full cursor-pointer relative transition duration-500 transform hover:scale-98 text-center overflow-hidden  md:mt-${marginTop} md:mb-${marginBottom} rounded-${\n                     rounded ? rounded : 0\n                  } `}\n               >\n                  <div\n                     className=\"w-full text-primary absolute top-1 z-50 opacity-0 group-hover:opacity-100 transition duration-500\"\n                     style={{\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                     }}\n                  >\n                     <h1 className=\"mb-0 md:mb-1 text-4xl md:text-6xl lg:text-9xl\">{title}</h1>\n                     <p className=\"text-xs md:text-2xl md:mt-2\">{subTitle}</p>\n\n                     <p\n                        className=\"absolute z-100 text-xs md:text-lg bg-primary px-2 text-blackPure rounded md:rounded-md\"\n                        style={{\n                           top: \"140%\",\n                           left: \"50%\",\n                           transform: \"translate(-50%, -50%)\",\n                        }}\n                     >\n                        Click for more\n                     </p>\n                  </div>\n\n                  <div className=\"bg-blackPure absolute inset-0 z-40 opacity-0 group-hover:opacity-75 transition-all duration-1000\"></div>\n\n                  <Img fluid={tileImg} alt={imgAlt} loading=\"eager\" />\n               </animated.div>\n            </Link>\n         ) : (\n            <a href={href} target=\"_blank\">\n               <animated.div\n                  onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n                  onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                  style={{ transform: props.xys.interpolate(trans) }}\n                  className={`group w-full cursor-pointer relative transition duration-500 transform hover:scale-98 text-center overflow-hidden  md:mt-${marginTop} md:mb-${marginBottom} rounded-${\n                     rounded ? rounded : 0\n                  } `}\n               >\n                  <div\n                     className=\"w-full text-primary absolute top-1 z-50 opacity-0 group-hover:opacity-100 transition duration-500\"\n                     style={{\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                     }}\n                  >\n                     <h1 className=\"mb-1 text-3xl md:text-6xl lg:text-9xl\">{title}</h1>\n                     <p className=\"text-xs md:text-md md:text-3xl\">{subTitle}</p>\n                  </div>\n                  <div className=\"bg-blackPure absolute inset-0 z-40 opacity-0 group-hover:opacity-75 transition-all duration-1000\"></div>\n                  <Img fluid={tileImg} alt={imgAlt} loading=\"eager\" />\n               </animated.div>\n            </a>\n         )}\n      </>\n   );\n}\n\nexport default ImgTile;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport ImgTile from \"./ImgTile\";\n\nfunction InPageNav() {\n   const pageLocation = typeof window !== \"undefined\" ? window.location.pathname : \"\";\n\n   const data = useStaticQuery(graphql`\n      query Images {\n         classicaImg: file(relativePath: { eq: \"classica/classica_tile_2.png\" }) {\n            id\n            childImageSharp {\n               fluid(maxWidth: 2880) {\n                  ...GatsbyImageSharpFluid_withWebp\n               }\n            }\n         }\n         petImg: file(relativePath: { eq: \"petTime/petTime_tile_2.png\" }) {\n            id\n            childImageSharp {\n               fluid(maxWidth: 2880) {\n                  ...GatsbyImageSharpFluid_withWebp\n               }\n            }\n         }\n         shuushImg: file(relativePath: { eq: \"shuush/shuush_tile_2.png\" }) {\n            id\n            childImageSharp {\n               fluid(maxWidth: 2880) {\n                  ...GatsbyImageSharpFluid_withWebp\n               }\n            }\n         }\n         spaceDigestImg: file(relativePath: { eq: \"spaceDigest/spaceDigest_tile.png\" }) {\n            id\n            childImageSharp {\n               fluid(maxWidth: 2880) {\n                  ...GatsbyImageSharpFluid_withWebp\n               }\n            }\n         }\n         buzzsumoImg: file(relativePath: { eq: \"buzzsumo/buzzsumo_tile.png\" }) {\n            id\n            childImageSharp {\n               fluid(maxWidth: 2880) {\n                  ...GatsbyImageSharpFluid_withWebp\n               }\n            }\n         }\n      }\n   `);\n\n   const tilesData = [\n      {\n         title: \"\",\n         subTitle: \"\",\n         tileImg: data.petImg.childImageSharp.fluid,\n         linkTo: \"/pet-time\",\n         imgAlt: \"Pet Time app ui design\",\n         rounded: \"\",\n      },\n      {\n         title: \"\",\n         subTitle: \"\",\n         tileImg: data.shuushImg.childImageSharp.fluid,\n         linkTo: \"/shuush\",\n         imgAlt: \"Shuush! app ui design\",\n         rounded: \"\",\n      },\n      {\n         title: \"\",\n         subTitle: \"\",\n         tileImg: data.classicaImg.childImageSharp.fluid,\n         linkTo: \"/classica\",\n         imgAlt: \"classica app ui design\",\n         rounded: \"\",\n      },\n      {\n         title: \"\",\n         subTitle: \"\",\n         tileImg: data.spaceDigestImg.childImageSharp.fluid,\n         linkTo: \"/space-digest\",\n         imgAlt: \"Website page\",\n         rounded: \"\",\n      },\n      {\n         title: \"\",\n         subTitle: \"\",\n         tileImg: data.buzzsumoImg.childImageSharp.fluid,\n         linkTo: \"/buzzsumo\",\n         imgAlt: \"Buzzsumo web page\",\n         rounded: \"\",\n      },\n   ];\n\n   // const navItemsNumber = Object.keys(data).length;\n\n   return (\n      <section className=\"w-full mb-10 pt-12 md:pt-20\">\n         <h2 className=\"block text-center mb-12 text-2xl md:text-4xl text-primary\">Check other projects</h2>\n         <div className=\"grid grid-cols-1 md:grid-cols-5 gap-0 mx-auto -mb-10 md:m-0\">\n            {/* <div\n            className={`grid grid-cols-1 md:grid-cols-${\n               pageLocation === \"/three\" ? navItemsNumber : navItemsNumber - 1\n            } gap-0 mx-auto -mb-10 md:m-0`}\n         > */}\n            {/* {tilesData.map(\n               (tile, i) =>\n                  pageLocation !== tile.linkTo && (\n                     <ImgTile\n                        key={i}\n                        title={tile.title}\n                        subTitle={tile.subTitle}\n                        tileImg={tile.tileImg}\n                        linkTo={tile.linkTo}\n                        imgAlt={tile.imgAlt}\n                        marginTop={tile.marginTop}\n                        marginBottom={tile.marginBottom}\n                        rounded={tile.rounded}\n                     />\n                  )\n            )} */}\n            {tilesData.map((tile, i) => (\n               <ImgTile\n                  key={i}\n                  title={tile.title}\n                  subTitle={tile.subTitle}\n                  tileImg={tile.tileImg}\n                  linkTo={tile.linkTo}\n                  imgAlt={tile.imgAlt}\n                  marginTop={tile.marginTop}\n                  marginBottom={tile.marginBottom}\n                  rounded={tile.rounded}\n               />\n            ))}\n         </div>\n      </section>\n   );\n}\n\nexport default InPageNav;\n"],"sourceRoot":""}