{"version":3,"sources":["webpack:///./src/pages/three.js","webpack:///./src/components/ScrollToTop.js","webpack:///./src/components/InPageNav.js"],"names":["Three","data","useStaticQuery","keywords","title","className","threeImages","nodes","map","image","key","id","fluid","childImageSharp","loading","rel","target","href","style","backgroundColor","ScrollToTop","showBelow","useState","show","setShow","handleScroll","window","pageYOffset","useEffect","addEventListener","removeEventListener","onClick","top","behavior","width","height","viewBox","fill","xmlns","d","fill-rule","clip-rule","InPageNav","TransitionInview","ImgTile","Title","SubTitle","TileImg","petImg","LinkTo","ImgAlt","MarginTop","MarginBottom","shuushImg","classicaImg","spaceDigestImg","Href"],"mappings":"4FAAA,qGA+EeA,UAxEf,WACI,IAAMC,EAAOC,yBAAe,cAkB5B,OACI,oCACI,kBAAC,IAAD,CACIC,SAAU,CAAC,YAAD,6JAcVC,MAAM,UAEV,kBAAC,IAAD,KACI,yBAAKC,UAAU,8BACVJ,EAAKK,YAAYC,MAAMC,KAAI,SAACC,GAAD,OACxB,kBAAC,IAAD,CACIC,IAAKD,EAAME,GACXC,MAAOH,EAAMI,gBAAgBD,MAC7BE,QAAQ,eAKxB,kBAAC,IAAD,KACI,uBACIC,IAAI,sBACJC,OAAO,SACPC,KAAK,mDAEL,yBACIZ,UAAU,2BACVa,MAAO,CAAEC,gBAAiB,YAE1B,wBAAId,UAAU,+GAAd,gBAMZ,yBAAKA,UAAU,aACX,kBAAC,IAAD,U,mFC1BDe,EA7CK,SAACC,GAAe,IAAD,EACPC,oBAASD,GAA1BE,EADwB,KAClBC,EADkB,KAGzBC,EAAe,WACbC,OAAOC,YAAcN,EAChBE,GAAMC,GAAQ,GAEfD,GAAMC,GAAQ,IAI1BI,qBAAU,WACN,GAAIP,EAEA,OADAK,OAAOG,iBAAP,SAAkCJ,GAC3B,kBAAMC,OAAOI,oBAAP,SAAqCL,MAEvD,IAMH,OACI,4BACIpB,UAAU,wLACV0B,QAPY,WAChBL,OAAM,SAAa,CAAEM,IAAK,EAAGC,SAAS,aAQlC,yBACIC,MAAM,GACNC,OAAO,GACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACIC,EAAE,uYACFF,KAAK,eACLG,YAAU,UACVC,YAAU,e,YCmEfC,IArGf,WACI,IAAMzC,EAAOC,yBAAe,YA6C5B,OACI,yBAAKG,UAAU,+BACX,kBAACsC,EAAA,EAAD,KACI,6BAAStC,UAAU,kHACf,wBAAIA,UAAU,qCAAd,wBAGA,kBAAC,EAAD,CAAagB,UAAU,UAG/B,yBAAKhB,UAAU,kCACX,kBAACuC,EAAA,EAAD,CACIC,MAAM,GACNC,SAAS,GACTC,QAAS9C,EAAK+C,OAAOnC,gBAAgBD,MACrCqC,OAAO,WACPC,OAAO,yBACPC,UAAU,IACVC,aAAa,MAGjB,kBAACR,EAAA,EAAD,CACIC,MAAM,GACNC,SAAS,GACTC,QAAS9C,EAAKoD,UAAUxC,gBAAgBD,MACxCqC,OAAO,UACPC,OAAO,wBACPC,UAAU,IACVC,aAAa,MAGjB,kBAACR,EAAA,EAAD,CACIC,MAAM,GACNC,SAAS,GACTC,QAAS9C,EAAKqD,YAAYzC,gBAAgBD,MAC1CqC,OAAO,YACPC,OAAO,yBACPC,UAAU,IACVC,aAAa,MAGjB,kBAACR,EAAA,EAAD,CACIC,MAAM,GACNC,SAAS,GACTC,QAAS9C,EAAKsD,eAAe1C,gBAAgBD,MAC7C4C,KAAK,gCACLN,OAAO,uBACPC,UAAU,IACVC,aAAa","file":"component---src-pages-three-js-13292ebd5fcfc6a63d3e.js","sourcesContent":["import React from \"react\";\nimport SEO from \"../components/Seo\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport TransitionPageIn from \"../components/TransitionPageIn\";\nimport InPageNav from \"../components/InPageNav\";\n\nfunction Three() {\n    const data = useStaticQuery(graphql`\n        query threeImages {\n            threeImages: allFile(\n                filter: { relativeDirectory: { eq: \"three\" } }\n                sort: { order: ASC, fields: name }\n            ) {\n                nodes {\n                    id\n                    childImageSharp {\n                        fluid(maxWidth: 2880) {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    return (\n        <>\n            <SEO\n                keywords={[\n                    `UI Design`,\n                    `Product Design`,\n                    `Product Designer`,\n                    `Messaging App`,\n                    `App`,\n                    `UI Designer`,\n                    `Web Designer`,\n                    `Product Designer`,\n                    `Front-end Developer`,\n                    `Portfolio`,\n                    `Brighton`,\n                    `Uk`,\n                ]}\n                title=\"Three\"\n            />\n            <TransitionPageIn>\n                <div className=\"w-full max-w-full mx-auto \">\n                    {data.threeImages.nodes.map((image) => (\n                        <Img\n                            key={image.id}\n                            fluid={image.childImageSharp.fluid}\n                            loading=\"eager\"\n                        />\n                    ))}\n                </div>\n            </TransitionPageIn>\n            <TransitionPageIn>\n                <a\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    href=\"https://www.instagram.com/three_design_company/\"\n                >\n                    <div\n                        className=\"w-full pb-20 text-center\"\n                        style={{ backgroundColor: \"#f7f7f7\" }}\n                    >\n                        <h2 className=\"xlg:inline-block sm:text-2xl lg:text-4xl text-primary ease-in-out mb-3 underline w-10/12 md:w-8/12 mx-auto \">\n                            Instagram\n                        </h2>\n                    </div>\n                </a>\n            </TransitionPageIn>\n            <div className=\" bg-white\">\n                <InPageNav />\n            </div>\n        </>\n    );\n}\n\nexport default Three;\n","import React, { useState, useEffect } from \"react\";\n\nconst ScrollToTop = (showBelow) => {\n    const [show, setShow] = useState(showBelow ? false : true);\n\n    const handleScroll = () => {\n        if (window.pageYOffset > showBelow) {\n            if (!show) setShow(true);\n        } else {\n            if (show) setShow(false);\n        }\n    };\n\n    useEffect(() => {\n        if (showBelow) {\n            window.addEventListener(`scroll`, handleScroll);\n            return () => window.removeEventListener(`scroll`, handleScroll);\n        }\n    }, []);\n\n    const handleClick = () => {\n        window[`scrollTo`]({ top: 0, behavior: `smooth` });\n    };\n\n    return (\n        <button\n            className=\"w-10 md:w-12 bg-white hover:bg-primary ease-in-out transform hover:-translate-y-1 transition duration-200 focus:outline-none px-3 rounded-full py-3 inline-block mx-auto md:mx-0 mb-8\"\n            onClick={handleClick}\n        >\n            <svg\n                width=\"\"\n                height=\"\"\n                viewBox=\"0 0 15 15\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M7.14645 2.14645C7.34171 1.95118 7.65829 1.95118 7.85355 2.14645L11.8536 6.14645C12.0488 6.34171 12.0488 6.65829 11.8536 6.85355C11.6583 7.04882 11.3417 7.04882 11.1464 6.85355L8 3.70711L8 12.5C8 12.7761 7.77614 13 7.5 13C7.22386 13 7 12.7761 7 12.5L7 3.70711L3.85355 6.85355C3.65829 7.04882 3.34171 7.04882 3.14645 6.85355C2.95118 6.65829 2.95118 6.34171 3.14645 6.14645L7.14645 2.14645Z\"\n                    fill=\"currentColor\"\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                ></path>\n            </svg>\n        </button>\n    );\n};\n\nexport default ScrollToTop;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport TransitionInview from \"../components/TransitionInview\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport ImgTile from \"./ImgTile\";\n\nfunction InPageNav() {\n    const data = useStaticQuery(graphql`\n        query Images {\n            classicaImg: file(\n                relativePath: { eq: \"classica/classica__tile.png\" }\n            ) {\n                id\n                childImageSharp {\n                    fluid(maxWidth: 2880) {\n                        ...GatsbyImageSharpFluid_withWebp\n                    }\n                }\n            }\n            petImg: file(relativePath: { eq: \"petTime/petTime__tile.png\" }) {\n                id\n                childImageSharp {\n                    fluid(maxWidth: 2880) {\n                        ...GatsbyImageSharpFluid_withWebp\n                    }\n                }\n            }\n            shuushImg: file(relativePath: { eq: \"shuush/shuush__tile.png\" }) {\n                id\n                childImageSharp {\n                    fluid(maxWidth: 2880) {\n                        ...GatsbyImageSharpFluid_withWebp\n                    }\n                }\n            }\n            spaceDigestImg: file(\n                relativePath: { eq: \"spaceDigest/spaceDigest__tile.png\" }\n            ) {\n                id\n                childImageSharp {\n                    fluid(maxWidth: 2880) {\n                        ...GatsbyImageSharpFluid_withWebp\n                    }\n                }\n            }\n        }\n    `);\n\n    // {\n    //     console.log(data);\n    // }\n\n    return (\n        <div className=\"w-full mb-10 pt-12 md:pt-20\">\n            <TransitionInview>\n                <section className=\"md:w-8/12 mx-auto flex flex-col-reverse md:flex-row md:justify-between text-center md:text-left justify-center\">\n                    <h2 className=\"text-2xl md:text-4xl text-primary\">\n                        Check other projects\n                    </h2>\n                    <ScrollToTop showBelow=\"250\" />\n                </section>\n            </TransitionInview>\n            <div className=\"grid grid-cols-4 gap-0 mx-auto\">\n                <ImgTile\n                    Title=\"\"\n                    SubTitle=\"\"\n                    TileImg={data.petImg.childImageSharp.fluid}\n                    LinkTo=\"/petTime\"\n                    ImgAlt=\"Pet Time app ui design\"\n                    MarginTop=\"0\"\n                    MarginBottom=\"0\"\n                />\n\n                <ImgTile\n                    Title=\"\"\n                    SubTitle=\"\"\n                    TileImg={data.shuushImg.childImageSharp.fluid}\n                    LinkTo=\"/shuush\"\n                    ImgAlt=\"Shuush! app ui design\"\n                    MarginTop=\"0\"\n                    MarginBottom=\"0\"\n                />\n\n                <ImgTile\n                    Title=\"\"\n                    SubTitle=\"\"\n                    TileImg={data.classicaImg.childImageSharp.fluid}\n                    LinkTo=\"/classica\"\n                    ImgAlt=\"Classica app ui design\"\n                    MarginTop=\"0\"\n                    MarginBottom=\"0\"\n                />\n\n                <ImgTile\n                    Title=\"\"\n                    SubTitle=\"\"\n                    TileImg={data.spaceDigestImg.childImageSharp.fluid}\n                    Href=\"https://www.spacedigest.live/\"\n                    ImgAlt=\"Space Digest website\"\n                    MarginTop=\"0\"\n                    MarginBottom=\"0\"\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default InPageNav;\n"],"sourceRoot":""}